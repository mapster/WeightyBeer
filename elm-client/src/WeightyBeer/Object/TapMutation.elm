-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module WeightyBeer.Object.TapMutation exposing (CreateRequiredArguments, RemoveRequiredArguments, UpdateRequiredArguments, create, remove, update)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import WeightyBeer.InputObject
import WeightyBeer.Interface
import WeightyBeer.Object
import WeightyBeer.Scalar
import WeightyBeer.ScalarCodecs
import WeightyBeer.Union


type alias CreateRequiredArguments =
    { name : String
    , order : Float
    , volume : Float
    , isActive : Bool
    , weight : String
    , brew : String
    }


create : CreateRequiredArguments -> SelectionSet decodesTo WeightyBeer.Object.Tap -> SelectionSet (Maybe decodesTo) WeightyBeer.Object.TapMutation
create requiredArgs object_ =
    Object.selectionForCompositeField "create" [ Argument.required "name" requiredArgs.name Encode.string, Argument.required "order" requiredArgs.order Encode.float, Argument.required "volume" requiredArgs.volume Encode.float, Argument.required "isActive" requiredArgs.isActive Encode.bool, Argument.required "weight" requiredArgs.weight Encode.string, Argument.required "brew" requiredArgs.brew Encode.string ] object_ (identity >> Decode.nullable)


type alias UpdateRequiredArguments =
    { id : String
    , name : String
    , order : Float
    , volume : Float
    , isActive : Bool
    , weight : String
    , brew : String
    }


update : UpdateRequiredArguments -> SelectionSet decodesTo WeightyBeer.Object.Tap -> SelectionSet (Maybe decodesTo) WeightyBeer.Object.TapMutation
update requiredArgs object_ =
    Object.selectionForCompositeField "update" [ Argument.required "id" requiredArgs.id Encode.string, Argument.required "name" requiredArgs.name Encode.string, Argument.required "order" requiredArgs.order Encode.float, Argument.required "volume" requiredArgs.volume Encode.float, Argument.required "isActive" requiredArgs.isActive Encode.bool, Argument.required "weight" requiredArgs.weight Encode.string, Argument.required "brew" requiredArgs.brew Encode.string ] object_ (identity >> Decode.nullable)


type alias RemoveRequiredArguments =
    { id : String }


remove : RemoveRequiredArguments -> SelectionSet decodesTo WeightyBeer.Object.Tap -> SelectionSet (Maybe decodesTo) WeightyBeer.Object.TapMutation
remove requiredArgs object_ =
    Object.selectionForCompositeField "remove" [ Argument.required "id" requiredArgs.id Encode.string ] object_ (identity >> Decode.nullable)
